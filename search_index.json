[["index.html", "Today I Learned in 2022 시작하며", " Today I Learned in 2022 PARK Yeonkyu 2022-03-09 시작하며 1/01 github에 매일매일 잔디 심고 있었다. 2/18 github를 청소해 보겠다고 repo를 전체 삭제했다. 잔디도 깔끔하게 같이 사라졌다. 다시 시작하는걸로... "],["년-3월.html", "2022년 3월 TIL20220309 TIL20220308 TIL20220307 TIL20220306 TIL20220305 TIL20220304 TIL20220303 TIL20220302 TIL20220301", " 2022년 3월 TIL20220309 클래스 불균형과 샘플링 분류 분석의 경우 관찰된 표본 범주 비율이 큰 쪽으로 편향되는 경향이 있다. 이를 해결하기 위해 범주의 비율을 조절하여 정제한다. !(Downsampling &amp; Upsampling1)[https://raw.githubusercontent.com/rafjaa/machine_learning_fecib/master/src/static/img/resampling.png] !(SMOTE2)[https://raw.githubusercontent.com/rafjaa/machine_learning_fecib/master/src/static/img/smote.png] Upsampling: this method increases the size of the minority class by sampling with replacement so that the classes will have the same size. Downsampling: in contrast to the above method, this one decreases the size of the majority class to be the same or closer to the minority class size by just taking out a random sample. Hybrid methods : The well known hybrid methods are ROSE (Random oversampling examples), and SMOTE (Synthetic minority oversampling technique), they downsample the majority class, and creat new artificial points in the minority class. For more detail about SMOTE method click here, and for ROSE click here. from: Methods for dealing with imbalanced data3 TIL20220308 R 에러 수정 &gt; library(dplyr) Error: package or namespace load failed for ‘dplyr’ in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]): ‘rlang’이라고 불리는 패키지가 없습니다 In addition: Warning message: 패키지 ‘dplyr’는 R 버전 3.4.4에서 작성되었습니다 이런 식으로 에러가 발생하면 깔끔하게 R을 재설치 하자. libpath나 패키지 재설치 등의 방법이 언급되지만 안되는 경우가 있다. 한시간 반 소비하고 내린 결론이다. 4.0.3에서 문제가 일어났고 4.1.2로 버전 업해서 문제 해결되었다. Error: ! Assigned data `all_column_mean[i]` must be compatible with existing data. i Error occurred for column `flipper_length_mm`. x Can&#39;t convert from &lt;double&gt; to &lt;integer&gt; due to loss of precision. * Locations: 1. Backtrace: 1. base::`[&lt;-`(`*tmp*`, is.na(p.mean[, i]), i, value = `&lt;dbl&gt;`) 19. tibble `&lt;fn&gt;`(`&lt;vctrs___&gt;`) p.mean &lt;- as.data.frame(penguins[c(3:6)])와 같이 데이터 형태를 명시적으로 지정해 준다. 결측치 시각화 md.pattern(penguins, plot=T, rotate.names = T) ## species island year bill_length_mm bill_depth_mm flipper_length_mm ## 333 1 1 1 1 1 1 ## 9 1 1 1 1 1 1 ## 2 1 1 1 0 0 0 ## 0 0 0 2 2 2 ## body_mass_g sex ## 333 1 1 0 ## 9 1 0 1 ## 2 0 0 5 ## 2 11 19 TIL20220307 결측치 처리 결측치 종류 결측치 종류 확인 ## summary() summary(penguins) ## species island bill_length_mm bill_depth_mm ## Adelie :152 Biscoe :168 Min. :32.10 Min. :13.10 ## Chinstrap: 68 Dream :124 1st Qu.:39.23 1st Qu.:15.60 ## Gentoo :124 Torgersen: 52 Median :44.45 Median :17.30 ## Mean :43.92 Mean :17.15 ## 3rd Qu.:48.50 3rd Qu.:18.70 ## Max. :59.60 Max. :21.50 ## NA&#39;s :2 NA&#39;s :2 ## flipper_length_mm body_mass_g sex year ## Min. :172.0 Min. :2700 female:165 Min. :2007 ## 1st Qu.:190.0 1st Qu.:3550 male :168 1st Qu.:2007 ## Median :197.0 Median :4050 NA&#39;s : 11 Median :2008 ## Mean :200.9 Mean :4202 Mean :2008 ## 3rd Qu.:213.0 3rd Qu.:4750 3rd Qu.:2009 ## Max. :231.0 Max. :6300 Max. :2009 ## NA&#39;s :2 NA&#39;s :2 colSums(is.na(penguins)); nrow(penguins) ## species island bill_length_mm bill_depth_mm ## 0 0 2 2 ## flipper_length_mm body_mass_g sex year ## 2 2 11 0 ## [1] 344 등등등 제거 penguins.naomit &lt;- na.omit(penguins) colSums(is.na(penguins.naomit)); nrow(penguins.naomit) ## species island bill_length_mm bill_depth_mm ## 0 0 0 0 ## flipper_length_mm body_mass_g sex year ## 0 0 0 0 ## [1] 333 penguins.naomit &lt;- penguins[complete.cases(penguins), ] colSums(is.na(penguins.naomit)); nrow(penguins.naomit) ## species island bill_length_mm bill_depth_mm ## 0 0 0 0 ## flipper_length_mm body_mass_g sex year ## 0 0 0 0 ## [1] 333 제거 후 11개 행이 감소된 것을 볼 수 있다. 대체 0으로 대체 # 연속형 변수에 대해서만 적용 penguins.0 &lt;- penguins[c(3:6)] %&gt;% select_if(function(x) any(is.na(x))) %&gt;% replace(is.na(.), 0) colSums(is.na(penguins.0)) ## bill_length_mm bill_depth_mm flipper_length_mm body_mass_g ## 0 0 0 0 평균으로 대체 penguins.mean &lt;- penguins[c(3:6)] %&gt;% select_if(function(x) any(is.na(x))) %&gt;% mutate(bill_length_mm = ifelse(is.na(bill_length_mm), mean(bill_length_mm, na.rm=T), bill_length_mm), bill_depth_mm = ifelse(is.na(bill_depth_mm), mean(bill_depth_mm, na.rm=T), bill_depth_mm), flipper_length_mm = ifelse(is.na(flipper_length_mm), mean(flipper_length_mm, na.rm=T), flipper_length_mm), body_mass_g = ifelse(is.na(body_mass_g), mean(body_mass_g, na.rm=T), body_mass_g)) colSums(is.na(penguins.mean)) ## bill_length_mm bill_depth_mm flipper_length_mm body_mass_g ## 0 0 0 0 # 0으로 대체한 경우와 평균값으로 대체한 경우의 차이 colMeans(penguins[c(3:6)], na.rm = T); colMeans(penguins.0); colMeans(round(penguins.mean,1)); ## bill_length_mm bill_depth_mm flipper_length_mm body_mass_g ## 43.92193 17.15117 200.91520 4201.75439 ## bill_length_mm bill_depth_mm flipper_length_mm body_mass_g ## 43.66657 17.05145 199.74709 4177.32558 ## bill_length_mm bill_depth_mm flipper_length_mm body_mass_g ## 43.92180 17.15145 200.91512 4201.75465 all_column_median &lt;- apply(penguins[c(3:6)], 2, median, na.rm=T); all_column_median ## bill_length_mm bill_depth_mm flipper_length_mm body_mass_g ## 44.45 17.30 197.00 4050.00 penguins.median &lt;- penguins[c(3:6)] for(i in colnames(penguins.median)) { penguins.median[is.na(penguins.median[,i]), i] &lt;- all_column_median[i] } colMeans(round(penguins.median)) ## bill_length_mm bill_depth_mm flipper_length_mm body_mass_g ## 43.93314 17.15407 200.89244 4200.87209 TIL20220306 대응표본 평균검정 독립표본 평균검정은 두 개의 표본이 서로 독립인 모집단으로부터추출되었다는 가정을 전제로 한다. 두 표본의 값이 쌍(pair)을 이루고 있는 경우 쌍을 이룬 값은 서로 독립이 아니며, 이처럼 검정하려고 하는 두 개의 표본이 서로 독립이 아닌 모집단으로부터 추출되었을 대 대응표본 평균검정(paired-samples t test)을 이용하여 두 집단 간의차이 검정을 수행할 수 있다. 독립표본 대응표본 무작위로 실험 대상자를선정하여 두 개의 집단으로 나눔 무작위로 실험 대상자를 선정 한 집단에는 앛미식사를 하고 IQ 테스트에 응하도록 하고 다른 집단에는 앛미식사를 거르고 IQ 테스트에참가하도록 함 각 실험 대아자를 대상으로 IQ 테스트를 두 차례 실시 각 실험 대상자에 대해 하나씩의 IQ 테스트 점수를 얻게 됨 한번은 아침칫가를 하고 테스트에 응하고 다른 한번은 아침식사를 하지 않은 상태로 테스트에 참가하도록 함 각 식험 대상자에 대해 두 개의 IQ 테스트 점수를 얻게 됨 str(sleep) ## &#39;data.frame&#39;: 20 obs. of 3 variables: ## $ extra: num 0.7 -1.6 -0.2 -1.2 -0.1 3.4 3.7 0.8 0 2 ... ## $ group: Factor w/ 2 levels &quot;1&quot;,&quot;2&quot;: 1 1 1 1 1 1 1 1 1 1 ... ## $ ID : Factor w/ 10 levels &quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,..: 1 2 3 4 5 6 7 8 9 10 ... t.test(extra ~ group, data = sleep, paired = T) ## ## Paired t-test ## ## data: extra by group ## t = -4.0621, df = 9, p-value = 0.002833 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -2.4598858 -0.7001142 ## sample estimates: ## mean of the differences ## -1.58 주어진 표본이 wide format일 경우 벡터를 직접 지정하여 수행한다. sleep.wide &lt;- spread(sleep, key = group, value = extra) sleep.wide ## ID 1 2 ## 1 1 0.7 1.9 ## 2 2 -1.6 0.8 ## 3 3 -0.2 1.1 ## 4 4 -1.2 0.1 ## 5 5 -0.1 -0.1 ## 6 6 3.4 4.4 ## 7 7 3.7 5.5 ## 8 8 0.8 1.6 ## 9 9 0.0 4.6 ## 10 10 2.0 3.4 t.test(sleep.wide$`1`, sleep.wide$`2`, paired = T) ## ## Paired t-test ## ## data: sleep.wide$`1` and sleep.wide$`2` ## t = -4.0621, df = 9, p-value = 0.002833 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -2.4598858 -0.7001142 ## sample estimates: ## mean of the differences ## -1.58 독립표본 비율검정 귀무가설: 폐질환자 대비 흡연자의 비율이 병원별로 같다. 대립가설: 폐질환자 대비 흡연자의 비율이 병원별로 다르다. # 4개 병원에 대한 폐질환자 및 흡연자 비율 patients &lt;- c(86, 93, 136, 82) # 폐질환자 smokers &lt;- c(83, 90, 129,70) # 흡연자 smokers/patients # 페질환자 대비 흡연자 비율 ## [1] 0.9651163 0.9677419 0.9485294 0.8536585 prop.test(x=smokers, n=patients) ## ## 4-sample test for equality of proportions without continuity ## correction ## ## data: smokers out of patients ## X-squared = 12.6, df = 3, p-value = 0.005585 ## alternative hypothesis: two.sided ## sample estimates: ## prop 1 prop 2 prop 3 prop 4 ## 0.9651163 0.9677419 0.9485294 0.8536585 검정 수행 결과 네 병원의 폐질환자 대비 흡연자 수는 값다고 볼 수 없다. 독립표본 평균검정 독립표본 평균검정(two-independent samples t test)는 두 개의 독립표본 데이터를 이용하여 각각 대응되는 두 개의 모집단 평균이 서로 동일한지 검정한다. 두 집단이 서로 차이가 있는지를 검정하고자 할 때 수행한다. 귀무가설: 두 집단의 평균에는 차이가 없다(같다). 대립가설: 두 집단의 평균에는 차이가 있다(다르다). 예제 고양이의 성별에 따른 몸무게의 차이가 있는지를 검정한다. 귀무가설: 고양이 성별에 따른 몸무게 차이는 없다. 대립가설: 고양이 성별에 따른 몸무게 차이는 있다. t.test(formula = Bwt ~ Sex, data = cats) ## ## Welch Two Sample t-test ## ## data: Bwt by Sex ## t = -8.7095, df = 136.84, p-value = 8.831e-15 ## alternative hypothesis: true difference in means between group F and group M is not equal to 0 ## 95 percent confidence interval: ## -0.6631268 -0.4177242 ## sample estimates: ## mean in group F mean in group M ## 2.359574 2.900000 Bwt.f &lt;- cats$Bwt[cats$Sex==&quot;F&quot;] Bwt.m &lt;- cats$Bwt[cats$Sex==&quot;M&quot;] mean(Bwt.f); mean(Bwt.m); ## [1] 2.359574 ## [1] 2.9 t.test(Bwt.f, Bwt.m) ## ## Welch Two Sample t-test ## ## data: Bwt.f and Bwt.m ## t = -8.7095, df = 136.84, p-value = 8.831e-15 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -0.6631268 -0.4177242 ## sample estimates: ## mean of x mean of y ## 2.359574 2.900000 일표본 비율검정 prop.test() 함수는 모집단에 대한 표본의 비율에 대한 검정을 수행한다. 예제 프로야구 팀이 30경기 중 18승을 거두었을 때, 승률이 50%가 넘는다고 말할 수 있는가? 귀무가설: 승률이 50% 이하다. 대립가설: 승률이 50% 이상이다. # prop.test(x=성공횟수, n=시행횟수, p=검정코자하는비율) prop.test(x=18, n=30, p=0.5, alternative = &quot;greater&quot;) ## ## 1-sample proportions test with continuity correction ## ## data: 18 out of 30, null probability 0.5 ## X-squared = 0.83333, df = 1, p-value = 0.1807 ## alternative hypothesis: true p is greater than 0.5 ## 95 percent confidence interval: ## 0.4344744 1.0000000 ## sample estimates: ## p ## 0.6 일표본 평균검정 일표본 평균검정(one-sample t test)는 하나의 표본 데이터를 이용하여 모집단의 평균이 특정 값과 같은지 검정하는 것이다. 표본집단이 특정 모집단과 일치하는지 혹은 그렇지 않은지를 알고 싶을 때 이용한다. str(cats) ## &#39;data.frame&#39;: 144 obs. of 3 variables: ## $ Sex: Factor w/ 2 levels &quot;F&quot;,&quot;M&quot;: 1 1 1 1 1 1 1 1 1 1 ... ## $ Bwt: num 2 2 2 2.1 2.1 2.1 2.1 2.1 2.1 2.1 ... ## $ Hwt: num 7 7.4 9.5 7.2 7.3 7.6 8.1 8.2 8.3 8.5 ... 귀무가설: 고양이의 몸무게가 2.6kg이다. 대립가설: 고양이의 몸무게가 2.6kg이 아니다. t.result &lt;- t.test(x=cats$Bwt, mu=2.6); t.result ## ## One Sample t-test ## ## data: cats$Bwt ## t = 3.0565, df = 143, p-value = 0.002673 ## alternative hypothesis: true mean is not equal to 2.6 ## 95 percent confidence interval: ## 2.643669 2.803553 ## sample estimates: ## mean of x ## 2.723611 p95 &lt;- qt(0.975, df=143) ggplot(data = data.frame(x=c(-4,4)), aes(x)) + stat_function(fun=dt, args = list(df=143)) + labs(title=&quot;t Distribution&quot;, x=&quot;x&quot;, y=&quot;&quot;) + scale_y_continuous(breaks = NULL) + geom_vline(xintercept=t.result$statistic, color=&quot;blue&quot;, linetype = &quot;dashed&quot;, size=1) + geom_text(x=t.result$statistic+0.4, y=0.02, aes(label=round(t.result$statistic,2)), col=&quot;blue&quot;) + geom_vline(xintercept=p95, color=&quot;red&quot;, linetype = &quot;dashed&quot;, size=1) + geom_text(x=p95+0.3, y=0.06, aes(label=round(p95,2)), col=&quot;red&quot;) + theme_bw() 귀무가설: 고양이의 몸무게가 2.7kg이다. 대립가설: 고양이의 몸무게가 2.7kg이 아니다. t.result &lt;- t.test(x=cats$Bwt, mu=2.7); t.result ## ## One Sample t-test ## ## data: cats$Bwt ## t = 0.58382, df = 143, p-value = 0.5603 ## alternative hypothesis: true mean is not equal to 2.7 ## 95 percent confidence interval: ## 2.643669 2.803553 ## sample estimates: ## mean of x ## 2.723611 p95 &lt;- qt(0.975, df=143) ggplot(data = data.frame(x=c(-4,4)), aes(x)) + stat_function(fun=dt, args = list(df=143)) + labs(title=&quot;t Distribution&quot;, x=&quot;x&quot;, y=&quot;&quot;) + scale_y_continuous(breaks = NULL) + geom_vline(xintercept=t.result$statistic, color=&quot;blue&quot;, linetype = &quot;dashed&quot;, size=1) + geom_text(x=t.result$statistic+0.4, y=0.02, aes(label=round(t.result$statistic,2)), col=&quot;blue&quot;) + geom_vline(xintercept=p95, color=&quot;red&quot;, linetype = &quot;dashed&quot;, size=1) + geom_text(x=p95+0.3, y=0.06, aes(label=round(p95,2)), col=&quot;red&quot;) + theme_bw() 평균검정 평균검정은 평균에 대한 가설검정을 의미한다. 선정한 표본이 특정 평균값을 갖는 모집단에 속하는지(즉 표본의 평균과 모집단의 평균이 동일한지) 또는 두 표본 집단의 평균값 간에 차이가 존재하는지(즉 두 표본집단이 동일한 모집단에 속하는지) 검정한다. 일표본 평균검정, 독립표본 평균검정, 대응표본 평균 검정이 있다. 평균에 대한 가설검정은 t검정(t test)을 통해 수행할 수 있다. 표본평균이 모집단 평균과 동일한지 여부는 t값을 검정 통계량으로 사용하여 검정한다. \\[ t = \\frac{\\bar{x}-\\mu}{\\frac{s}{\\sqrt{n}}} \\] 예제 귀무가설: 벤처기업 경영자의 혈압은 일반일과 같다 대립가설; 벤터기업 경영자의 혈압은 일반일과 다르다 표본: 20명의 벤처기업 경영자 평균 135, 표준편차 25 모집단: 일반인 혈압 평균 115 \\[ 검정통계량 \\ \\ t = \\frac{135-115}{\\frac{25}{\\sqrt{20}}} = 3.58 \\] t &lt;- 3.58; n &lt;- 20; pt(t, df=n-1) # t값에 해당하는 누적확률 계산 ## [1] 0.9990014 # 특정 t값 이상의 누적확률에 관심이 있으므로 lower.tail을 F로 설정 # 반대편도 고려해야 함으로 두배 함 pt(t, df=n-1, lower.tail = F)*2 ## [1] 0.001997274 모집단 평균 115라는 가정하에서 135라는 평균은 0.002의 유의확률을 가지므로 5% 유의수준 하에서 귀무가설을 기각하고 대립가설을 채택한다. 유사한 방식으로 유의수준 0.05에 해당하는 t값을 계산하고 관측된 t값을 비교하여 검정한다. p95 &lt;- qt(0.025, df=n-1, lower.tail = F); p95 ## [1] 2.093024 주어진 t 값은 유의수준 5%에 해당하는 t값의 오른쪽에 위치함으로 귀무가설을 기각하고 대립가설을 채택한다. dt_range &lt;- function(x) { y &lt;- dt(x, df=19) y[x &lt; 2.09] &lt;- NA return(y) } ggplot(data = data.frame(x=c(-4,4)), aes(x)) + stat_function(fun=dt, args = list(df=19)) + stat_function(fun=dt_range, geom=&quot;area&quot;, fill=&quot;salmon&quot;, alpha=.5) + labs(title=&quot;t Distribution&quot;, x=&quot;x&quot;, y=&quot;&quot;) + scale_y_continuous(breaks = NULL) + geom_vline(xintercept=t, color=&quot;blue&quot;, linetype = &quot;dashed&quot;, size=1) + geom_text(x=t+0.3, y=0.02, aes(label=t), col=&quot;blue&quot;) + geom_vline(xintercept=p95, color=&quot;red&quot;, linetype = &quot;dashed&quot;, size=1) + geom_text(x=p95+0.3, y=0.06, aes(label=round(p95,2)), col=&quot;red&quot;) + theme_bw() TIL20220305 정규분포 정규분포(normal distribution)는 대표적인 연속확률분포(continuous probability distribution)으로 통계적 검정을 위해 가장 널리 사용되는 분포이다. 정규분포에서는 대부분의 관측값이 중앙에 몰려 있으며 중앙에서 멀어질수록 그 빈도수가 점점 작아지는 종 모양의 대칭인 모습을 가진다. x &lt;- seq(-4, 4, length=100) y &lt;- dnorm(x) df &lt;- data.frame(x=x, y=y) ggplot(df, aes(x,y)) + geom_line() + theme_bw() ggplot(data = data.frame(x=c(65,135)), aes(x)) + stat_function(fun=dnorm, n=101, args=list(mean=100, sd=10)) + labs(title=&quot;Normal Distribution&quot;, x=&quot;x&quot;, y=&quot;&quot;) + scale_y_continuous(breaks = NULL) + theme_bw() # IQ가 110 이하일 누적확률 계산 pnorm(110, mean=100, sd=10) ## [1] 0.8413447 # IQ가 110 초과일 누적확률 계산 pnorm(110, mean=100, sd=10, lower.tail = F) # 1 - pnorm(110, mean=100, sd=10) ## [1] 0.1586553 pnorm(0) # 표준정규 분포를 가정정 ## [1] 0.5 pnorm(0, mean=0, sd=1) ## [1] 0.5 # 90 ~ 110 사이의 누적확률 pnorm(110, mean=100, sd=10) - pnorm(90, mean=100, sd=10) ## [1] 0.6826895 diff(pnorm(c(90, 110), mean=100, sd=10)) ## [1] 0.6826895 주어진 누적확률의 관측값을 알고자 할 때는 qnorm() 함수를 수행한다. qnorm(0.05, mean=100, sd=10) ## [1] 83.55146 qnorm(0.95, mean=100, sd=10) ## [1] 116.4485 qnorm(c(0.05, 0.95), mean=100, sd=10) ## [1] 83.55146 116.44854 qnorm(c(0.025, 0.975)) ## [1] -1.959964 1.959964 rnorm(1, mean=100, sd=10) ## [1] 90.49816 rnorm(5, mean=100, sd=10) ## [1] 105.39638 89.13332 114.93673 116.72205 109.58968 rnorm(1) ## [1] -0.04081753 rnorm(5) ## [1] 0.3012713 2.7905512 0.1285953 -0.2843356 -1.7257012 데이터의 정규성 검정 set.seed(123) shapiro.test(rnorm(100, mean=100, sd=10)) # 정규분포 ## ## Shapiro-Wilk normality test ## ## data: rnorm(100, mean = 100, sd = 10) ## W = 0.99388, p-value = 0.9349 shapiro.test(runif(100, min=2, max=4)) # 일항분포 ## ## Shapiro-Wilk normality test ## ## data: runif(100, min = 2, max = 4) ## W = 0.9454, p-value = 0.0004182 set.seed(123) qqnorm(rnorm(100, mean=100, sd=10), col=&quot;blue&quot;, main = &quot;Sample from Normal Distribution&quot;) qqline(rnorm(100, mean=100, sd=10)) x축은 이론적 정규 분포에 의해 생성된 표본이고 y축은 실제 표본이다. set.seed(123) qqnorm(runif(100, min=2, max=4), col=&quot;red&quot;, main = &quot;Sample from Uniform Distribution&quot;) qqline(runif(100, min=2, max=4)) TIL20220304 가설검정 가설의 종류 대립가설(alternative hypothesis), 모집단에 대한 새로운 주장 귀무가설(null hypothesis), 기존의 주장 통계적 검정(statistical test) 또는 가설검정(hypothesis test)이란 표본 데이터를 기반으로 모집단에 대한 새로운 주장의 옮고 그름을 추론하는 과정을 말한다. 가설검정 절차 귀무가설이 사실이라는 전제하에서 수행되며 일반적으로 다음과 같은 절차를 따른다. 표본으로부터 검정하고자 하는 검정통계량(test statistic) 계산 검정통계량과 그 확률분포로부터 p-값(p-value) 계산 귀무가설이 사실이라는 가정하에서 관측한 통계량과 같거나 그보다 더 극단적인 값이 발생할 확률을 의미 유의확률(significance probability)이라고도 함 p-값이 매우 작으면 귀무가설 기각 판단의 기준으로 사용하는 5% 또는 1%의 확률을 유의수준(significance level)이라고 함 표본으로부터 관측된 결과(즉 계산된 통계량)가 나타날 가능성이 5% 미만 또는 1% 미만이 되는 귀무가설을 기각하면 이를 통계적으로 유의하다(statistically significant)라고 표현함 가설검정과 검정력 출처4 확률분포 출처5 이항분포(binomial distribution) 대표적인 이산확률분포(discrete probability distribution)로서 매회 어떤 사건이 일어날 확률이 동일한 독립 시행의 경우에 있어서 이 사건이 일어나는 횟수가 만들어 내는 분포이다. 예를 들면 동전 던지기로 동전을 일정 횟수 반복하여 던지는 실험에서 매 시행시마다 숫자면이 나타날 확률이 1/2이라고 할 때 숫자면이 나타나는 횟수는 이항분포를 따른다고 할 수 있다. dbinom(7, 10, 0.5) # 10번 던져 숫자면이 7번 나타날 확률 ## [1] 0.1171875 pbinom(7, 10, 0.5) # 10번 던져 숫자면이 7번 이하가 나타날 확률 ## [1] 0.9453125 누적확률은 밀도함수의 합으로 계산이 가능하다. sum(dbinom(c(0:7), 10, 0.5)) # 0번, 1번, ..., 7번 나타날 확률의 합 ## [1] 0.9453125 pbinom(7, 10, 0.5, lower.tail = F) # 1 - pbinom(7, 10, 0.5) ## [1] 0.0546875 # 4번 이상 7번 이하 발생할 누적확률, 7번에서 4번의 누적확률을 빼서 계산 pbinom(7, 10, 0.5) - pbinom(3, 10, 0.5) ## [1] 0.7734375 diff(pbinom(c(3,7), 10, 0.5)) ## [1] 0.7734375 set.seed(1) rbinom(1, size=10, prob = 0.5) ## [1] 4 rbinom(5, size=10, prob = 0.5) ## [1] 4 5 7 4 7 TIL20220303 데이터 요약 연속형 변수 요약 중심경향 지표 중심경향 지표(measures of central tendency)는 데이터가 특정 값을 중심으로 집중되어 있는 정도를 뜻한다. 중위수(median) 백분위수(quantile, percentile) 사분위수(quartile) 평균(mean) if(!require(MASS)) install.packages(&quot;MASS&quot;) library(MASS) # for survey dataset median(survey$Pulse) # 결측, 즉 NA 값에 따른 결과 ## [1] NA median(survey$Pulse, na.rm=T) # 결측값 제거 후 계산산 ## [1] 72.5 quantile(survey$Pulse, probs = 0.5, na.rm = T) # 중위수 ## 50% ## 72.5 quantile(survey$Pulse, probs = c(0.05, 0.95), na.rm = T) ## 5% 95% ## 59.55 92.00 # Q1, ... Q4 quantile(survey$Pulse, na.rm = T) ## 0% 25% 50% 75% 100% ## 35.0 66.0 72.5 80.0 104.0 quantile(survey$Pulse, seq(0,1,0.25), na.rm = T) ## 0% 25% 50% 75% 100% ## 35.0 66.0 72.5 80.0 104.0 # 주어진 값으로 백분위수 계산 survey$Pulse &lt;=80 # 80보다 작거나 같은 맥박수수mean(survey$Pulse &lt;= 80, na.rm = T) ## [1] 0.7552083 mean(survey$Pulse, na.rm = T) ## [1] 74.15104 if(!require(palmerpenguins)) install.packages(&quot;palmerpenguins&quot;) library(palmerpenguins) summary(penguins$body_mass_g) ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s ## 2700 3550 4050 4202 4750 6300 2 summary(penguins$species) ## Adelie Chinstrap Gentoo ## 152 68 124 summary(as.character(penguins$species)) ## Length Class Mode ## 344 character character summary(penguins) ## species island bill_length_mm bill_depth_mm ## Adelie :152 Biscoe :168 Min. :32.10 Min. :13.10 ## Chinstrap: 68 Dream :124 1st Qu.:39.23 1st Qu.:15.60 ## Gentoo :124 Torgersen: 52 Median :44.45 Median :17.30 ## Mean :43.92 Mean :17.15 ## 3rd Qu.:48.50 3rd Qu.:18.70 ## Max. :59.60 Max. :21.50 ## NA&#39;s :2 NA&#39;s :2 ## flipper_length_mm body_mass_g sex year ## Min. :172.0 Min. :2700 female:165 Min. :2007 ## 1st Qu.:190.0 1st Qu.:3550 male :168 1st Qu.:2007 ## Median :197.0 Median :4050 NA&#39;s : 11 Median :2008 ## Mean :200.9 Mean :4202 Mean :2008 ## 3rd Qu.:213.0 3rd Qu.:4750 3rd Qu.:2009 ## Max. :231.0 Max. :6300 Max. :2009 ## NA&#39;s :2 NA&#39;s :2 # list 형태를 인자로 입력하는 경우 penguins.list &lt;- as.list(penguins) summary(penguins.list) ## Length Class Mode ## species 344 factor numeric ## island 344 factor numeric ## bill_length_mm 344 -none- numeric ## bill_depth_mm 344 -none- numeric ## flipper_length_mm 344 -none- numeric ## body_mass_g 344 -none- numeric ## sex 344 factor numeric ## year 344 -none- numeric # lapply()를 통해 요약통계량 계산 lapply(penguins.list, summary) ## $species ## Adelie Chinstrap Gentoo ## 152 68 124 ## ## $island ## Biscoe Dream Torgersen ## 168 124 52 ## ## $bill_length_mm ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s ## 32.10 39.23 44.45 43.92 48.50 59.60 2 ## ## $bill_depth_mm ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s ## 13.10 15.60 17.30 17.15 18.70 21.50 2 ## ## $flipper_length_mm ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s ## 172.0 190.0 197.0 200.9 213.0 231.0 2 ## ## $body_mass_g ## Min. 1st Qu. Median Mean 3rd Qu. Max. NA&#39;s ## 2700 3550 4050 4202 4750 6300 2 ## ## $sex ## female male NA&#39;s ## 165 168 11 ## ## $year ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 2007 2007 2008 2008 2009 2009 변동성 지표 변동성 지표(measures of variability)는 데이터의 산포 정도를 뜻한다. 범위(range) 사분위 범위(interquartile range) 분산(variance) 표준편차(standard deviation) range(survey$Pulse, na.rm = T) ## [1] 35 104 var(survey$Pulse, na.rm = T) ## [1] 136.5896 sd(survey$Pulse, na.rm = T) ## [1] 11.68716 R에서는 다양한 기술 통계량을 계산하는 함수들을 제공한다. if(!require(pastecs)) install.packages(&quot;pastecs&quot;) ## Loading required package: pastecs ## ## Attaching package: &#39;pastecs&#39; ## The following objects are masked from &#39;package:dplyr&#39;: ## ## first, last ## The following object is masked from &#39;package:tidyr&#39;: ## ## extract library(pastecs) stat.desc(mtcars[c(&quot;mpg&quot;, &quot;hp&quot;, &quot;wt&quot;)]) ## mpg hp wt ## nbr.val 32.0000000 32.0000000 32.0000000 ## nbr.null 0.0000000 0.0000000 0.0000000 ## nbr.na 0.0000000 0.0000000 0.0000000 ## min 10.4000000 52.0000000 1.5130000 ## max 33.9000000 335.0000000 5.4240000 ## range 23.5000000 283.0000000 3.9110000 ## sum 642.9000000 4694.0000000 102.9520000 ## median 19.2000000 123.0000000 3.3250000 ## mean 20.0906250 146.6875000 3.2172500 ## SE.mean 1.0654240 12.1203173 0.1729685 ## CI.mean.0.95 2.1729465 24.7195501 0.3527715 ## var 36.3241028 4700.8669355 0.9573790 ## std.dev 6.0269481 68.5628685 0.9784574 ## coef.var 0.2999881 0.4674077 0.3041285 if(!require(psych)) install.packages(&quot;psych&quot;) ## Loading required package: psych ## ## Attaching package: &#39;psych&#39; ## The following objects are masked from &#39;package:ggplot2&#39;: ## ## %+%, alpha library(psych) describe(mtcars[c(&quot;mpg&quot;, &quot;hp&quot;, &quot;wt&quot;)]) ## vars n mean sd median trimmed mad min max range skew kurtosis ## mpg 1 32 20.09 6.03 19.20 19.70 5.41 10.40 33.90 23.50 0.61 -0.37 ## hp 2 32 146.69 68.56 123.00 141.19 77.10 52.00 335.00 283.00 0.73 -0.14 ## wt 3 32 3.22 0.98 3.33 3.15 0.77 1.51 5.42 3.91 0.42 -0.02 ## se ## mpg 1.07 ## hp 12.12 ## wt 0.17 집단별 기술 통계량을 계산한다. levels(survey$Exer) ## [1] &quot;Freq&quot; &quot;None&quot; &quot;Some&quot; tapply(survey$Pulse, survey$Exer, mean, na.rm = T) ## Freq None Some ## 71.96842 76.76471 76.18750 tapply(survey$Pulse, list(survey$Exer, survey$Sex), mean, na.rm = T) ## Female Male ## Freq 73.60976 70.67925 ## None 71.42857 80.50000 ## Some 77.00000 75.03030 aggregate(survey$Pulse, list(Exercise=survey$Exer, Sex=survey$Sex), mean, na.rm = T) ## Exercise Sex x ## 1 Freq Female 73.60976 ## 2 None Female 71.42857 ## 3 Some Female 77.00000 ## 4 Freq Male 70.67925 ## 5 None Male 80.50000 ## 6 Some Male 75.03030 aggregate(survey[c(&quot;Pulse&quot;, &quot;Age&quot;)], list(Exercise=survey$Exer, Sex=survey$Sex), mean, na.rm = T) ## Exercise Sex Pulse Age ## 1 Freq Female 73.60976 20.11229 ## 2 None Female 71.42857 22.32582 ## 3 Some Female 77.00000 20.29316 ## 4 Freq Male 70.67925 20.50257 ## 5 None Male 80.50000 20.75646 ## 6 Some Male 75.03030 19.91675 aggregate()는 FUN 인수에 사용자 정의 함수를 사용할 수 있다. myStats &lt;- function(x, na.rm = F) { if(na.rm) x &lt;- x[!is.na(x)] n &lt;- length(x) mean &lt;- mean(x) sd &lt;- sd(x) skew &lt;- sum((x-mean)^3/sd^3)/n kurt &lt;- sum((x-mean)^4/sd^4)/n - 3 return(c(n=n, mean=mean, sd=sd, skewness=skew, kurtosis=kurt)) } aggregate(survey$Pulse, list(Exercise=survey$Exer, Sex=survey$Sex), myStats, na.rm = T) ## Exercise Sex x.n x.mean x.sd x.skewness ## 1 Freq Female 41.000000000 73.609756098 12.491753377 -0.007083877 ## 2 None Female 7.000000000 71.428571429 11.414276775 -0.582777800 ## 3 Some Female 47.000000000 77.000000000 10.270260993 -0.057861601 ## 4 Freq Male 53.000000000 70.679245283 9.593213917 0.484695772 ## 5 None Male 10.000000000 80.500000000 15.204166096 0.148604585 ## 6 Some Male 33.000000000 75.030303030 13.501122288 -0.674836829 ## x.kurtosis ## 1 0.443768611 ## 2 -0.795725215 ## 3 -0.215883000 ## 4 0.543653114 ## 5 -1.649344568 ## 6 0.299978722 by(survey[c(&quot;Pulse&quot;, &quot;Age&quot;)], list(Exercise=survey$Exer, Sex=survey$Sex), summary) ## Exercise: Freq ## Sex: Female ## Pulse Age ## Min. : 40.00 Min. :16.92 ## 1st Qu.: 68.00 1st Qu.:17.42 ## Median : 72.00 Median :18.50 ## Mean : 73.61 Mean :20.11 ## 3rd Qu.: 80.00 3rd Qu.:20.17 ## Max. :104.00 Max. :39.75 ## NA&#39;s :8 ## ------------------------------------------------------------ ## Exercise: None ## Sex: Female ## Pulse Age ## Min. :50.00 Min. :17.17 ## 1st Qu.:69.00 1st Qu.:18.54 ## Median :70.00 Median :19.83 ## Mean :71.43 Mean :22.33 ## 3rd Qu.:78.00 3rd Qu.:20.79 ## Max. :86.00 Max. :41.58 ## NA&#39;s :4 ## ------------------------------------------------------------ ## Exercise: Some ## Sex: Female ## Pulse Age ## Min. : 50.0 Min. :16.92 ## 1st Qu.: 70.0 1st Qu.:17.50 ## Median : 76.0 Median :18.21 ## Mean : 77.0 Mean :20.29 ## 3rd Qu.: 83.5 3rd Qu.:19.15 ## Max. :100.0 Max. :73.00 ## NA&#39;s :11 ## ------------------------------------------------------------ ## Exercise: Freq ## Sex: Male ## Pulse Age ## Min. : 48.00 Min. :17.17 ## 1st Qu.: 64.00 1st Qu.:17.92 ## Median : 70.00 Median :18.58 ## Mean : 70.68 Mean :20.50 ## 3rd Qu.: 76.00 3rd Qu.:20.33 ## Max. :100.00 Max. :70.42 ## NA&#39;s :12 ## ------------------------------------------------------------ ## Exercise: None ## Sex: Male ## Pulse Age ## Min. : 60.00 Min. :16.92 ## 1st Qu.: 68.00 1st Qu.:18.17 ## Median : 80.00 Median :18.92 ## Mean : 80.50 Mean :20.76 ## 3rd Qu.: 93.75 3rd Qu.:19.67 ## Max. :104.00 Max. :43.83 ## NA&#39;s :3 ## ------------------------------------------------------------ ## Exercise: Some ## Sex: Male ## Pulse Age ## Min. :35.00 Min. :16.75 ## 1st Qu.:66.00 1st Qu.:18.31 ## Median :75.00 Median :18.92 ## Mean :75.03 Mean :19.92 ## 3rd Qu.:85.00 3rd Qu.:20.04 ## Max. :96.00 Max. :35.50 ## NA&#39;s :7 aggregate(survey[c(&quot;Pulse&quot;, &quot;Age&quot;)], list(Exercise=survey$Exer, Sex=survey$Sex), summary) ## Exercise Sex Pulse.Min. Pulse.1st Qu. Pulse.Median Pulse.Mean ## 1 Freq Female 40.00000 68.00000 72.00000 73.60976 ## 2 None Female 50.00000 69.00000 70.00000 71.42857 ## 3 Some Female 50.00000 70.00000 76.00000 77.00000 ## 4 Freq Male 48.00000 64.00000 70.00000 70.67925 ## 5 None Male 60.00000 68.00000 80.00000 80.50000 ## 6 Some Male 35.00000 66.00000 75.00000 75.03030 ## Pulse.3rd Qu. Pulse.Max. Pulse.NA&#39;s Age.Min. Age.1st Qu. Age.Median Age.Mean ## 1 80.00000 104.00000 8.00000 16.91700 17.41700 18.50000 20.11229 ## 2 78.00000 86.00000 4.00000 17.16700 18.54200 19.83300 22.32582 ## 3 83.50000 100.00000 11.00000 16.91700 17.50000 18.20850 20.29316 ## 4 76.00000 100.00000 12.00000 17.16700 17.91700 18.58300 20.50257 ## 5 93.75000 104.00000 3.00000 16.91700 18.16700 18.91700 20.75646 ## 6 85.00000 96.00000 7.00000 16.75000 18.31225 18.91700 19.91675 ## Age.3rd Qu. Age.Max. ## 1 20.16700 39.75000 ## 2 20.79150 41.58300 ## 3 19.14600 73.00000 ## 4 20.33300 70.41700 ## 5 19.66700 43.83300 ## 6 20.04200 35.50000 by(survey[c(&quot;Pulse&quot;, &quot;Age&quot;)], list(Exercise=survey$Exer, Sex=survey$Sex), function(x) sapply(x, myStats, na.rm=T)) ## Exercise: Freq ## Sex: Female ## Pulse Age ## n 41.000000000 49.000000 ## mean 73.609756098 20.112286 ## sd 12.491753377 4.831792 ## skewness -0.007083877 2.455680 ## kurtosis 0.443768611 5.815635 ## ------------------------------------------------------------ ## Exercise: None ## Sex: Female ## Pulse Age ## n 7.0000000 11.000000 ## mean 71.4285714 22.325818 ## sd 11.4142768 7.345709 ## skewness -0.5827778 1.687717 ## kurtosis -0.7957252 1.500502 ## ------------------------------------------------------------ ## Exercise: Some ## Sex: Female ## Pulse Age ## n 47.0000000 58.000000 ## mean 77.0000000 20.293155 ## sd 10.2702610 8.244537 ## skewness -0.0578616 4.976422 ## kurtosis -0.2158830 27.133862 ## ------------------------------------------------------------ ## Exercise: Freq ## Sex: Male ## Pulse Age ## n 53.0000000 65.000000 ## mean 70.6792453 20.502569 ## sd 9.5932139 7.098771 ## skewness 0.4846958 5.585797 ## kurtosis 0.5436531 35.161334 ## ------------------------------------------------------------ ## Exercise: None ## Sex: Male ## Pulse Age ## n 10.0000000 13.000000 ## mean 80.5000000 20.756462 ## sd 15.2041661 7.024934 ## skewness 0.1486046 2.688832 ## kurtosis -1.6493446 5.973724 ## ------------------------------------------------------------ ## Exercise: Some ## Sex: Male ## Pulse Age ## n 33.0000000 40.000000 ## mean 75.0303030 19.916750 ## sd 13.5011223 3.516292 ## skewness -0.6748368 2.719822 ## kurtosis 0.2999787 8.174582 describeBy(survey[c(&quot;Pulse&quot;, &quot;Age&quot;)], group = list(Exercise=survey$Exer)) ## ## Descriptive statistics by group ## Exercise: Freq ## vars n mean sd median trimmed mad min max range skew ## Pulse 1 95 71.97 10.93 71.0 71.57 10.38 40.00 104.00 64.0 0.28 ## Age 2 115 20.34 6.18 18.5 19.08 1.61 16.92 70.42 53.5 5.32 ## kurtosis se ## Pulse 0.73 1.12 ## Age 36.42 0.58 ## ------------------------------------------------------------ ## Exercise: None ## vars n mean sd median trimmed mad min max range skew kurtosis ## Pulse 1 17 76.76 14.14 76.00 76.73 11.86 50.00 104.00 54.00 0.20 -0.79 ## Age 2 24 21.48 7.06 19.33 19.80 1.61 16.92 43.83 26.92 2.32 4.09 ## se ## Pulse 3.43 ## Age 1.44 ## ------------------------------------------------------------ ## Exercise: Some ## vars n mean sd median trimmed mad min max range skew kurtosis ## Pulse 1 80 76.19 11.67 76.00 76.66 11.86 35.00 100 65.00 -0.52 0.63 ## Age 2 98 20.14 6.70 18.54 18.80 1.54 16.75 73 56.25 5.69 38.61 ## se ## Pulse 1.30 ## Age 0.68 TIL20220302 데이터 요약 범주형 변수 요약 비율 계산 if(!require(MASS)) install.packages(&quot;MASS&quot;) library(MASS) survey$Smoke==&quot;Never&quot; # 비흡연자에 대한 논리연산mean(survey$Smoke==&quot;Never&quot;, na.rm = T) # 비흡연자에 대한 비율 ## [1] 0.8008475 head(anorexia) ## Treat Prewt Postwt ## 1 Cont 80.7 80.2 ## 2 Cont 89.4 80.1 ## 3 Cont 91.8 86.4 ## 4 Cont 74.0 86.3 ## 5 Cont 78.1 76.1 ## 6 Cont 88.3 78.1 anorexia$Postwt &gt; anorexia$Prewt # 치료 후의 몸무게가 치료 전의 몸무게보다 큰가? ## [1] FALSE FALSE FALSE TRUE FALSE FALSE FALSE TRUE FALSE TRUE FALSE FALSE ## [13] TRUE TRUE TRUE FALSE FALSE FALSE FALSE FALSE TRUE TRUE TRUE TRUE ## [25] TRUE FALSE TRUE TRUE FALSE FALSE FALSE TRUE TRUE TRUE FALSE TRUE ## [37] TRUE TRUE TRUE FALSE TRUE FALSE TRUE FALSE TRUE FALSE FALSE FALSE ## [49] TRUE TRUE TRUE TRUE TRUE TRUE FALSE TRUE TRUE TRUE TRUE TRUE ## [61] FALSE FALSE TRUE TRUE FALSE FALSE TRUE TRUE TRUE TRUE TRUE TRUE mean(anorexia$Postwt &gt; anorexia$Prewt) ## [1] 0.5833333 head(mammals) ## body brain ## Arctic fox 3.385 44.5 ## Owl monkey 0.480 15.5 ## Mountain beaver 1.350 8.1 ## Cow 465.000 423.0 ## Grey wolf 36.330 119.5 ## Goat 27.660 115.0 # 두뇌의 무게가 2개의 표준편차보다 큰 논리연산식 abs(mammals$brain - mean(mammals$brain)) &gt; 2*sd(mammals$brain) ## [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ## [13] FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE FALSE ## [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE TRUE FALSE FALSE FALSE ## [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ## [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE ## [61] FALSE FALSE mean(abs(mammals$brain - mean(mammals$brain)) &gt; 2*sd(mammals$brain)) ## [1] 0.03225806 head(SP500) ## [1] -0.2588908 -0.8650307 -0.9804139 0.4504321 -1.1856666 -0.6629097 # 수익률이 전일보다 증가한 일자 논리식 head(diff(SP500) &gt; 0, 10) ## [1] FALSE FALSE TRUE FALSE TRUE TRUE FALSE TRUE TRUE FALSE mean(diff(SP500) &gt; 0) ## [1] 0.4857863 if(!require(vcd)) install.packages(&quot;vcd&quot;) ## Loading required package: vcd ## Loading required package: grid library(vcd) str(Arthritis) # 류마티스 관절염 치료 효과 ## &#39;data.frame&#39;: 84 obs. of 5 variables: ## $ ID : int 57 46 77 17 36 23 75 39 33 55 ... ## $ Treatment: Factor w/ 2 levels &quot;Placebo&quot;,&quot;Treated&quot;: 2 2 2 2 2 2 2 2 2 2 ... ## $ Sex : Factor w/ 2 levels &quot;Female&quot;,&quot;Male&quot;: 2 2 2 2 2 2 2 2 2 2 ... ## $ Age : int 27 29 30 32 46 58 59 59 63 63 ... ## $ Improved : Ord.factor w/ 3 levels &quot;None&quot;&lt;&quot;Some&quot;&lt;..: 2 1 1 3 3 3 1 3 1 1 ... levels(Arthritis$Treatment) ## [1] &quot;Placebo&quot; &quot;Treated&quot; levels(Arthritis$Improved) ## [1] &quot;None&quot; &quot;Some&quot; &quot;Marked&quot; crosstab &lt;- table(Arthritis$Improved, Arthritis$Treatment, dnn=c(&quot;Improved&quot;, &quot;Treatment&quot;)) crosstab ## Treatment ## Improved Placebo Treated ## None 29 13 ## Some 7 7 ## Marked 7 21 crosstab[&quot;Marked&quot;, &quot;Treated&quot;] ## [1] 21 crosstab &lt;- xtabs(~ Improved + Treatment, data = Arthritis) crosstab ## Treatment ## Improved Placebo Treated ## None 29 13 ## Some 7 7 ## Marked 7 21 margin.table(crosstab, margin = 1) # 행 ## Improved ## None Some Marked ## 42 14 28 margin.table(crosstab, margin = 2) # 열 ## Treatment ## Placebo Treated ## 43 41 prop.table(crosstab, margin = 1) # 행의 합이 1 ## Treatment ## Improved Placebo Treated ## None 0.6904762 0.3095238 ## Some 0.5000000 0.5000000 ## Marked 0.2500000 0.7500000 prop.table(crosstab, margin = 2) # 열의 합이 1 ## Treatment ## Improved Placebo Treated ## None 0.6744186 0.3170732 ## Some 0.1627907 0.1707317 ## Marked 0.1627907 0.5121951 prop.table(crosstab) ## Treatment ## Improved Placebo Treated ## None 0.34523810 0.15476190 ## Some 0.08333333 0.08333333 ## Marked 0.08333333 0.25000000 addmargins(crosstab, margin = 1) # 합의 행을 생성 ## Treatment ## Improved Placebo Treated ## None 29 13 ## Some 7 7 ## Marked 7 21 ## Sum 43 41 addmargins(crosstab, margin = 2) # 합의 열을 생성 ## Treatment ## Improved Placebo Treated Sum ## None 29 13 42 ## Some 7 7 14 ## Marked 7 21 28 addmargins(crosstab) ## Treatment ## Improved Placebo Treated Sum ## None 29 13 42 ## Some 7 7 14 ## Marked 7 21 28 ## Sum 43 41 84 addmargins(prop.table(crosstab, margin = 2), 1) ## Treatment ## Improved Placebo Treated ## None 0.6744186 0.3170732 ## Some 0.1627907 0.1707317 ## Marked 0.1627907 0.5121951 ## Sum 1.0000000 1.0000000 if(!require(gmodels)) install.packages(&quot;gmodels&quot;) ## Loading required package: gmodels library(gmodels) CrossTable(Arthritis$Improved, Arthritis$Treatment, dnn=c(&quot;Improved&quot;, &quot;Treatment&quot;)) ## ## ## Cell Contents ## |-------------------------| ## | N | ## | Chi-square contribution | ## | N / Row Total | ## | N / Col Total | ## | N / Table Total | ## |-------------------------| ## ## ## Total Observations in Table: 84 ## ## ## | Treatment ## Improved | Placebo | Treated | Row Total | ## -------------|-----------|-----------|-----------| ## None | 29 | 13 | 42 | ## | 2.616 | 2.744 | | ## | 0.690 | 0.310 | 0.500 | ## | 0.674 | 0.317 | | ## | 0.345 | 0.155 | | ## -------------|-----------|-----------|-----------| ## Some | 7 | 7 | 14 | ## | 0.004 | 0.004 | | ## | 0.500 | 0.500 | 0.167 | ## | 0.163 | 0.171 | | ## | 0.083 | 0.083 | | ## -------------|-----------|-----------|-----------| ## Marked | 7 | 21 | 28 | ## | 3.752 | 3.935 | | ## | 0.250 | 0.750 | 0.333 | ## | 0.163 | 0.512 | | ## | 0.083 | 0.250 | | ## -------------|-----------|-----------|-----------| ## Column Total | 43 | 41 | 84 | ## | 0.512 | 0.488 | | ## -------------|-----------|-----------|-----------| ## ## multtab &lt;- table(Arthritis$Improved, Arthritis$Sex, Arthritis$Treatment) multtab ## , , = Placebo ## ## ## Female Male ## None 19 10 ## Some 7 0 ## Marked 6 1 ## ## , , = Treated ## ## ## Female Male ## None 6 7 ## Some 5 2 ## Marked 16 5 multtab &lt;- xtabs(~ Improved + Sex + Treatment, data = Arthritis) multtab ## , , Treatment = Placebo ## ## Sex ## Improved Female Male ## None 19 10 ## Some 7 0 ## Marked 6 1 ## ## , , Treatment = Treated ## ## Sex ## Improved Female Male ## None 6 7 ## Some 5 2 ## Marked 16 5 ftable(multtab) ## Treatment Placebo Treated ## Improved Sex ## None Female 19 6 ## Male 10 7 ## Some Female 7 5 ## Male 0 2 ## Marked Female 6 16 ## Male 1 5 ftable(multtab, row.vars = c(2,3)) ## Improved None Some Marked ## Sex Treatment ## Female Placebo 19 7 6 ## Treated 6 5 16 ## Male Placebo 10 0 1 ## Treated 7 2 5 ftable(Arthritis[c(&quot;Improved&quot;, &quot;Sex&quot;, &quot;Treatment&quot;)], row.vars = c(2,3)) ## Improved None Some Marked ## Sex Treatment ## Female Placebo 19 7 6 ## Treated 6 5 16 ## Male Placebo 10 0 1 ## Treated 7 2 5 margin.table(multtab, 1) ## Improved ## None Some Marked ## 42 14 28 margin.table(multtab, 2) ## Sex ## Female Male ## 59 25 margin.table(multtab, 3) ## Treatment ## Placebo Treated ## 43 41 ftable(prop.table(multtab, c(2,3))) ## Treatment Placebo Treated ## Improved Sex ## None Female 0.59375000 0.22222222 ## Male 0.90909091 0.50000000 ## Some Female 0.21875000 0.18518519 ## Male 0.00000000 0.14285714 ## Marked Female 0.18750000 0.59259259 ## Male 0.09090909 0.35714286 ftable(addmargins(prop.table(multtab, c(2,3)))) ## Treatment Placebo Treated Sum ## Improved Sex ## None Female 0.59375000 0.22222222 0.81597222 ## Male 0.90909091 0.50000000 1.40909091 ## Sum 1.50284091 0.72222222 2.22506313 ## Some Female 0.21875000 0.18518519 0.40393519 ## Male 0.00000000 0.14285714 0.14285714 ## Sum 0.21875000 0.32804233 0.54679233 ## Marked Female 0.18750000 0.59259259 0.78009259 ## Male 0.09090909 0.35714286 0.44805195 ## Sum 0.27840909 0.94973545 1.22814454 ## Sum Female 1.00000000 1.00000000 2.00000000 ## Male 1.00000000 1.00000000 2.00000000 ## Sum 2.00000000 2.00000000 4.00000000 TIL20220301 데이터 요약 범주형 변수 요약 기술통계와 추론통계, 대부분은 모집단을 설명하는 추론통계이지만 모집단을 잘 설명하기 위해서는 표본집단을 잘 이해사고 적절한 통계기법을 선택하는 것이 중요하다. 빈도표 if(!require(MASS)) install.packages(&quot;MASS&quot;) library(MASS) str(survey) ## &#39;data.frame&#39;: 237 obs. of 12 variables: ## $ Sex : Factor w/ 2 levels &quot;Female&quot;,&quot;Male&quot;: 1 2 2 2 2 1 2 1 2 2 ... ## $ Wr.Hnd: num 18.5 19.5 18 18.8 20 18 17.7 17 20 18.5 ... ## $ NW.Hnd: num 18 20.5 13.3 18.9 20 17.7 17.7 17.3 19.5 18.5 ... ## $ W.Hnd : Factor w/ 2 levels &quot;Left&quot;,&quot;Right&quot;: 2 1 2 2 2 2 2 2 2 2 ... ## $ Fold : Factor w/ 3 levels &quot;L on R&quot;,&quot;Neither&quot;,..: 3 3 1 3 2 1 1 3 3 3 ... ## $ Pulse : int 92 104 87 NA 35 64 83 74 72 90 ... ## $ Clap : Factor w/ 3 levels &quot;Left&quot;,&quot;Neither&quot;,..: 1 1 2 2 3 3 3 3 3 3 ... ## $ Exer : Factor w/ 3 levels &quot;Freq&quot;,&quot;None&quot;,..: 3 2 2 2 3 3 1 1 3 3 ... ## $ Smoke : Factor w/ 4 levels &quot;Heavy&quot;,&quot;Never&quot;,..: 2 4 3 2 2 2 2 2 2 2 ... ## $ Height: num 173 178 NA 160 165 ... ## $ M.I : Factor w/ 2 levels &quot;Imperial&quot;,&quot;Metric&quot;: 2 1 NA 2 2 1 1 2 2 2 ... ## $ Age : num 18.2 17.6 16.9 20.3 23.7 ... levels(survey$Smoke) ## [1] &quot;Heavy&quot; &quot;Never&quot; &quot;Occas&quot; &quot;Regul&quot; frqtab &lt;- table(survey$Smoke) frqtab ## ## Heavy Never Occas Regul ## 11 189 19 17 class(frqtab) ## [1] &quot;table&quot; frqtab[2] ## Never ## 189 frqtab[&quot;Never&quot;] ## Never ## 189 최빈값 frqtab == max(frqtab) ## ## Heavy Never Occas Regul ## FALSE TRUE FALSE FALSE frqtab[frqtab == max(frqtab)] ## Never ## 189 names(frqtab[frqtab == max(frqtab)]) ## [1] &quot;Never&quot; which.max(frqtab) ## Never ## 2 frqtab[which.max(frqtab)] ## Never ## 189 names(frqtab[which.max(frqtab)]) ## [1] &quot;Never&quot; 비율도표 frqtab.prop &lt;- prop.table(frqtab) frqtab.prop ## ## Heavy Never Occas Regul ## 0.04661017 0.80084746 0.08050847 0.07203390 frqtab.prop[&quot;Never&quot;] ## Never ## 0.8008475 frqtab.prop * 100 ## ## Heavy Never Occas Regul ## 4.661017 80.084746 8.050847 7.203390 https://raw.githubusercontent.com/rafjaa/machine_learning_fecib/master/src/static/img/resampling.png↩︎ https://raw.githubusercontent.com/rafjaa/machine_learning_fecib/master/src/static/img/smote.png↩︎ https://www.r-bloggers.com/2019/04/methods-for-dealing-with-imbalanced-data/↩︎ http://www.ktword.co.kr/img_data/5094_2.JPG↩︎ https://miro.medium.com/max/1400/1*fP1TTrA7TYD58rYgMHiL_A.png↩︎ "],["년-2월.html", "2022년 2월 TIL20220228 TIL20220227 TIL20220226 TIL20220225 TIL20220224 TIL20220223 TIL20220222 TIL20220221 TIL20220220 TIL20220219 TIL20220218", " 2022년 2월 TIL20220228 데이터 수집 통계데이터분석 - 데이터 수집6 데이터 수집 원천 출판물(publication) 실험(experiment) 관찰(observation) 서베이(servey) 표본과 모집단 표본, 데이터 수집에 포한된 참여자의 집단, 기술통계(descriptive statistics) 모집단, 우리가 궁극적으로 결론을 도출하고자 하는 대상이 되는 전체 집단, 추론통계(inferential statistics) 표본의 선정 판단표본(judgment sample) 편의표본(convenience sample) 무작위표본(random sample) 측정척도 측정(measurement), 데이터 항목의 속성에 숫자를 부여하는 과정 척도(scale), 측정을 위하여 사용되는 도구 척도의 종류 명목척도(nominal scale) 서열척도(ordinal scale) 간격척도(interval scale) 비율척도(ratio scale) TIL20220227 GitHub에 파일 올리기 연습용 csv 파일 올리기, GitHub Edit 창에 Drop&amp;Drop으로 등록할 수 있다. Sample_w_Header.csv Sample_wo_Header.csv sample &lt;- read.csv(&quot;https://github.com/yeonkyupark/TIL2022/files/8148798/Sample_w_Header.csv&quot;, fileEncoding=&quot;UTF-8-BOM&quot;) colnames(sample) ## [1] &quot;Time&quot; &quot;LSL&quot; &quot;USL&quot; &quot;Measure&quot; &quot;Result&quot; sample &lt;- read.csv(&quot;https://github.com/yeonkyupark/TIL2022/files/8148798/Sample_w_Header.csv&quot;) colnames(sample) ## [1] &quot;Time&quot; &quot;LSL&quot; &quot;USL&quot; &quot;Measure&quot; &quot;Result&quot; 읽어들인 첫번째 데이터가 깨지는 경우 인코딩을 확인해 본다. R을 이용하여 CSV 파일을 읽을 때 첫번째 문자가 깨지는 오류 해결 방법 엑셀 if 함수 정리 엑셀 IF 함수 사용법 및 예제 정리 :: 논리함수 =IF(AND(D2&gt;=C2, D2&lt;=B2), &quot;PASS&quot;, &quot;FAIL&quot;) TIL20220226 데이터 훑어보기 library(palmerpenguins) # 사용할 데이터 셋 우선 데이터 구조는 str() 일반적으로 summary()를 통해 수치 연산 결과를 전체적인 모습을 살펴볼 수 있다. # base package summary(penguins) ## species island bill_length_mm bill_depth_mm ## Adelie :152 Biscoe :168 Min. :32.10 Min. :13.10 ## Chinstrap: 68 Dream :124 1st Qu.:39.23 1st Qu.:15.60 ## Gentoo :124 Torgersen: 52 Median :44.45 Median :17.30 ## Mean :43.92 Mean :17.15 ## 3rd Qu.:48.50 3rd Qu.:18.70 ## Max. :59.60 Max. :21.50 ## NA&#39;s :2 NA&#39;s :2 ## flipper_length_mm body_mass_g sex year ## Min. :172.0 Min. :2700 female:165 Min. :2007 ## 1st Qu.:190.0 1st Qu.:3550 male :168 1st Qu.:2007 ## Median :197.0 Median :4050 NA&#39;s : 11 Median :2008 ## Mean :200.9 Mean :4202 Mean :2008 ## 3rd Qu.:213.0 3rd Qu.:4750 3rd Qu.:2009 ## Max. :231.0 Max. :6300 Max. :2009 ## NA&#39;s :2 NA&#39;s :2 skimr 패키지의 skim()을 통해 유사한 수치연산 결과를 보다 가독성이 좋은 형태로 출력해 준다. library(skimr) skim(penguins) TABLE 1: Data summary Name penguins Number of rows 344 Number of columns 8 _______________________ Column type frequency: factor 3 numeric 5 ________________________ Group variables None Variable type: factor skim_variable n_missing complete_rate ordered n_unique top_counts species 0 1.00 FALSE 3 Ade: 152, Gen: 124, Chi: 68 island 0 1.00 FALSE 3 Bis: 168, Dre: 124, Tor: 52 sex 11 0.97 FALSE 2 mal: 168, fem: 165 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist bill_length_mm 2 0.99 43.92 5.46 32.1 39.23 44.45 48.5 59.6 ▃▇▇▆▁ bill_depth_mm 2 0.99 17.15 1.97 13.1 15.60 17.30 18.7 21.5 ▅▅▇▇▂ flipper_length_mm 2 0.99 200.92 14.06 172.0 190.00 197.00 213.0 231.0 ▂▇▃▅▂ body_mass_g 2 0.99 4201.75 801.95 2700.0 3550.00 4050.00 4750.0 6300.0 ▃▇▆▃▂ year 0 1.00 2008.03 0.82 2007.0 2007.00 2008.00 2009.0 2009.0 ▇▁▇▁▇ TIL20220225 R에서 데이터 읽어 오기 csv 포멧으로 사용하는게 가장 편하고, 파일 형식이 다른 경우 csv 파일 형태로 변환하여 사용하길 추천. 여건이 되지 않으면 구글링해서 해당 포멧 처리하는 것으로, 하지만 가능하면 엑셀로 기본 전처리 후 csv로 변환하여 사용. read.csv(file, header = TRUE, sep = &quot;,&quot;, quote = &quot;\\&quot;&quot;, dec = &quot;.&quot;, fill = TRUE, comment.char = &quot;&quot;, ...) TIL20220224 RStudio + bookdown + github 배포하기 GitHub Repository 생성하기 생성된 Git Repo로 RStudio 빈 Project 생성하기 Bookdown Project 생성하기 생성된 Project GitHub에 올리기 git checkout main git add . git commit -m &#39;1st commit on main&#39; git push origin main GitHub Action workflow 생성하기 gh-pages 브랜치를 생성한다. git checkout --orphan gh-pages git rm -rf . git commit --allow-empty -m &#39;1st commit on gh-pages&#39; git push origin gh-pages git checkout main RStudio Console에서 Workflow를 생성한다. usethis::use_github_action(url = &quot;https://raw.githubusercontent.com/ropenscilabs/actions_sandbox/main/.github/workflows/deploy_bookdown.yml&quot;) 수정된 파일 GitHub에 올리기 Workflow 및 배포된 페이지 확인하기 page 생성/수정 후 정상동작 확인하기 https://yeonkyupark.github.io/Rdataanalysis/ TIL20220223 rstudio.cloud PAT 업데이트 https://stackoverflow.com/questions/66065099/how-to-update-github-authentification-token-on-rstudio-to-match-the-new-policy credentials::set_gethub_pat() image 위 코드로 해결함. 파비콘 만들기 https://www.favicon-generator.org TIL20220222 code snippet in R RStudio에서 snippet 설정을 한다. Tools → Global Options → Code → Editing → Snippets image # snippet 등록 snippet myggplot # 코드 작성 시 반드시 tab으로 띄워쓰기 할 것 p &lt;- ggplot(data = ${1:데이터}, aes(x=${2:변수1}, y=${3:변수2}, col=${4:범주1}, fill=${5:범주2})) + geom_${6:그래프종류}() + labs(title=&quot;${7:그래프제목}&quot;, x=&quot;${8:x축}&quot;, y=&quot;${9:y축}&quot;) + theme_bw() p TIL20220221 Github Actions를 이용한 자동 배포 세상은 넓고 똑똑한 사람은 참 많은 것 같다. ref to: How to publish bookdown projects with GitHub Actions on GitHub Pages 실습 RStudio에서 bookdown project를 하나 만든다. GitHub에서 Repository를 하나 만든다. 둘이 연결한다. GitHub Actions를 위한 workflows를 생성한다. usethis::use_github_action(url = &quot;https://raw.githubusercontent.com/ropenscilabs/actions_sandbox/main/.github/workflows/deploy_bookdown.yml&quot;) 배포할 브랜치를 변경해 준다. 코드 업데이트 후 정상 동작 확인한다. ! 주의 deploy_bookdown.yml의 branch 이름 확인할 것, 최근에 master에서 main으로 변경됨 bookdown의 _bookdown.yml의 output_dir과 deploy_bookdown.yml의 build_dir 일치시킬 것 repository에 build_dir(_book)가 없으면 만들어 둘 것 TIL20220220 netlify 자동 배포 1 rendering 안해도 netlify에 deploy되나 (’’ ?) 우선 rendering된 docs 폴더를 netlify에 연결하는 걸로 하자. netlify 자동 배포 2 https://www.emilhvitfeldt.com/post/bookdown-netlify-github-actions/ 1차 실패 2차 진행 중 … 3차, 편한 방법을 찾자. TIL20220219 netlify와 bookdown 연동 https://bookdown.org/yihui/blogdown/netlify.html TIL20220218 github repo 삭제하면 잔디도 죽는다 사용하던 github repo를 모두 삭제했다. repo가 삭제되면 심어 두었던 잔디도 같이 죽는다는 것을 알게 되었다. 덕분에 깨끗한 마음으로 새로 시작할 수 있을 것 같다 ‘^’ bookdown으로 블로그 전환 jekyll로 잘 운영하던 블로그를 bookdown으로 이사, 일단 가볍고 문서 작성하기 편하고 체계적이고, 무엇보다 기존 repo 싹 날려서 그렇다. RStudio, Bookdown, Github pages 등으로 검색하면 여러 정보를 얻을 수 있다. 중간중간 설명이 필요한 부분도 있지만 우선 여기 참조하면 세팅할 수 있다. https://www.youtube.com/watch?v=Z4Hn4LoNuE8&amp;list=PLY0OaF78qqGAxKX91WuRigHpwBU0C2SB_↩︎ "],["년-1월.html", "2022년 1월", " 2022년 1월 2월 18일, 날짜도 참… 심어 두었던 잔디를 모두 날려 먹었다. "],["연습장.html", "연습장 r 코드 연습", " 연습장 r 코드 연습 library(ggplot2) ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) + geom_point() + labs(x=&quot;꽃잎 길이&quot;, y=&quot;꽃잎 넓이&quot;) + theme_bw() library(dplyr) iris %&gt;% head() ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1 5.1 3.5 1.4 0.2 setosa ## 2 4.9 3.0 1.4 0.2 setosa ## 3 4.7 3.2 1.3 0.2 setosa ## 4 4.6 3.1 1.5 0.2 setosa ## 5 5.0 3.6 1.4 0.2 setosa ## 6 5.4 3.9 1.7 0.4 setosa "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
